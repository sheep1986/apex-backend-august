-- Call Attempts Table Schema\n-- This table tracks EVERY call attempt made by the AI system\n-- Essential for Phase 2: Campaign Call Log and Analytics\n\n-- Create call outcomes enum\nCREATE TYPE call_outcome AS ENUM (\n  'answered',           -- Call was answered by a person\n  'voicemail',         -- Call went to voicemail\n  'no_answer',         -- Call rang but no answer\n  'busy',              -- Line was busy\n  'failed',            -- Technical failure (bad number, network error)\n  'qualified',         -- AI determined lead is qualified/interested\n  'not_interested',    -- AI determined lead is not interested\n  'callback_requested', -- Lead requested a callback\n  'do_not_call',       -- Lead requested to be removed from calls\n  'wrong_number',      -- Wrong person/number\n  'disconnected'       -- Call was disconnected mid-conversation\n);\n\n-- Create call attempts table\nCREATE TABLE call_attempts (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  \n  -- Core identification\n  campaign_id UUID NOT NULL REFERENCES campaigns(id) ON DELETE CASCADE,\n  organization_id UUID NOT NULL REFERENCES organizations(id) ON DELETE CASCADE,\n  contact_id UUID REFERENCES contacts(id) ON DELETE SET NULL, -- May be null if contact not yet in CRM\n  \n  -- Call details\n  phone_number VARCHAR(20) NOT NULL,\n  contact_name VARCHAR(255), -- Name if available\n  \n  -- VAPI integration\n  vapi_call_id VARCHAR(255) UNIQUE, -- VAPI's unique call identifier\n  vapi_assistant_id VARCHAR(255),   -- Which AI assistant was used\n  \n  -- Call timing\n  call_started_at TIMESTAMP WITH TIME ZONE NOT NULL,\n  call_ended_at TIMESTAMP WITH TIME ZONE,\n  duration_seconds INTEGER DEFAULT 0,\n  \n  -- Call outcome\n  outcome call_outcome NOT NULL DEFAULT 'failed',\n  outcome_reason TEXT, -- Additional details about the outcome\n  \n  -- AI Analysis\n  transcript JSONB, -- Full conversation transcript\n  ai_sentiment_score DECIMAL(3,2), -- -1.0 to 1.0 sentiment analysis\n  ai_qualification_score DECIMAL(3,2), -- 0.0 to 1.0 likelihood of being qualified\n  ai_summary TEXT, -- AI-generated summary of the call\n  ai_next_action TEXT, -- AI-suggested next action\n  \n  -- Cost tracking\n  call_cost_usd DECIMAL(10,4) DEFAULT 0.0000,\n  \n  -- Lead qualification (if qualified, this gets copied to CRM)\n  is_qualified BOOLEAN DEFAULT false,\n  qualification_notes TEXT,\n  created_crm_contact BOOLEAN DEFAULT false, -- Whether this call created a CRM contact\n  \n  -- Metadata\n  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n  \n  -- Additional data from VAPI\n  raw_vapi_data JSONB, -- Complete VAPI webhook data for debugging\n  \n  -- Index for performance\n  CONSTRAINT valid_duration CHECK (duration_seconds >= 0),\n  CONSTRAINT valid_sentiment CHECK (ai_sentiment_score >= -1.0 AND ai_sentiment_score <= 1.0),\n  CONSTRAINT valid_qualification CHECK (ai_qualification_score >= 0.0 AND ai_qualification_score <= 1.0)\n);\n\n-- Indexes for performance\nCREATE INDEX idx_call_attempts_campaign_id ON call_attempts(campaign_id);\nCREATE INDEX idx_call_attempts_organization_id ON call_attempts(organization_id);\nCREATE INDEX idx_call_attempts_phone_number ON call_attempts(phone_number);\nCREATE INDEX idx_call_attempts_outcome ON call_attempts(outcome);\nCREATE INDEX idx_call_attempts_started_at ON call_attempts(call_started_at);\nCREATE INDEX idx_call_attempts_vapi_call_id ON call_attempts(vapi_call_id);\nCREATE INDEX idx_call_attempts_qualified ON call_attempts(is_qualified) WHERE is_qualified = true;\n\n-- Partition by organization for scale (if needed later)\n-- CREATE TABLE call_attempts_org_1 PARTITION OF call_attempts FOR VALUES IN ('org-1-uuid');\n\n-- Row Level Security\nALTER TABLE call_attempts ENABLE ROW LEVEL SECURITY;\n\n-- Platform owners can see all call attempts\nCREATE POLICY \"Platform owners can view all call attempts\" ON call_attempts\n  FOR ALL USING (auth.jwt() ->> 'role' = 'platform_owner');\n\n-- Client admins can only see their organization's call attempts\nCREATE POLICY \"Client admins can view organization call attempts\" ON call_attempts\n  FOR ALL USING (\n    auth.jwt() ->> 'role' = 'client_admin' AND \n    organization_id = (auth.jwt() ->> 'organization_id')::uuid\n  );\n\n-- Client users can only see call attempts for campaigns they have access to\n-- (This might need refinement based on how campaign access is managed)\nCREATE POLICY \"Client users can view accessible call attempts\" ON call_attempts\n  FOR SELECT USING (\n    auth.jwt() ->> 'role' = 'client_user' AND \n    organization_id = (auth.jwt() ->> 'organization_id')::uuid\n  );\n\n-- Update timestamp trigger\nCREATE OR REPLACE FUNCTION update_call_attempts_updated_at()\nRETURNS TRIGGER AS $$\nBEGIN\n  NEW.updated_at = NOW();\n  RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\nCREATE TRIGGER update_call_attempts_updated_at\n  BEFORE UPDATE ON call_attempts\n  FOR EACH ROW\n  EXECUTE FUNCTION update_call_attempts_updated_at();\n\n-- Sample data insertion (for testing)\n/*\nINSERT INTO call_attempts (\n  campaign_id,\n  organization_id,\n  phone_number,\n  contact_name,\n  vapi_call_id,\n  call_started_at,\n  call_ended_at,\n  duration_seconds,\n  outcome,\n  transcript,\n  ai_sentiment_score,\n  ai_qualification_score,\n  ai_summary,\n  is_qualified,\n  call_cost_usd\n) VALUES (\n  'campaign-uuid',\n  'org-uuid',\n  '+1-555-123-4567',\n  'John Doe',\n  'vapi_call_123',\n  NOW() - INTERVAL '5 minutes',\n  NOW() - INTERVAL '3 minutes',\n  120,\n  'qualified',\n  '[{\"speaker\": \"ai\", \"text\": \"Hello, is this John?\"}, {\"speaker\": \"user\", \"text\": \"Yes, speaking.\"}]'::jsonb,\n  0.75,\n  0.85,\n  'Lead showed strong interest in our AI calling solution. Requested more information.',\n  true,\n  0.12\n);\n*/\n\n-- View for campaign analytics\nCREATE OR REPLACE VIEW campaign_call_analytics AS\nSELECT \n  c.id as campaign_id,\n  c.name as campaign_name,\n  c.organization_id,\n  COUNT(*) as total_calls,\n  COUNT(*) FILTER (WHERE ca.outcome = 'answered') as answered_calls,\n  COUNT(*) FILTER (WHERE ca.outcome = 'qualified') as qualified_calls,\n  COUNT(*) FILTER (WHERE ca.outcome = 'voicemail') as voicemail_calls,\n  COUNT(*) FILTER (WHERE ca.outcome = 'no_answer') as no_answer_calls,\n  COUNT(*) FILTER (WHERE ca.is_qualified = true) as total_qualified,\n  ROUND(COUNT(*) FILTER (WHERE ca.outcome = 'answered')::decimal / COUNT(*) * 100, 2) as answer_rate,\n  ROUND(COUNT(*) FILTER (WHERE ca.is_qualified = true)::decimal / COUNT(*) * 100, 2) as qualification_rate,\n  SUM(ca.duration_seconds) as total_duration_seconds,\n  SUM(ca.call_cost_usd) as total_cost_usd,\n  AVG(ca.ai_sentiment_score) as avg_sentiment_score,\n  AVG(ca.ai_qualification_score) as avg_qualification_score\nFROM campaigns c\nLEFT JOIN call_attempts ca ON c.id = ca.campaign_id\nGROUP BY c.id, c.name, c.organization_id;\n\n-- Grant appropriate permissions\nGRANT SELECT, INSERT, UPDATE ON call_attempts TO authenticated;\nGRANT SELECT ON campaign_call_analytics TO authenticated;\nGRANT USAGE ON SEQUENCE call_attempts_id_seq TO authenticated;\n\n-- Comments for documentation\nCOMMENT ON TABLE call_attempts IS 'Tracks every call attempt made by the AI system for complete campaign analytics';\nCOMMENT ON COLUMN call_attempts.transcript IS 'JSONB array of conversation turns with speaker and text';\nCOMMENT ON COLUMN call_attempts.ai_qualification_score IS 'AI confidence score (0-1) that this lead is qualified';\nCOMMENT ON COLUMN call_attempts.is_qualified IS 'Whether this call resulted in a qualified lead (copied to CRM)';\nCOMMENT ON VIEW campaign_call_analytics IS 'Aggregated analytics for campaign performance reporting';"